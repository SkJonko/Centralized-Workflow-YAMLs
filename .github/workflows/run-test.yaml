name: Run Tests

on:
  workflow_call:
    inputs:
      run_test:
        required: false
        type: boolean
        default: true


  run_test:
    if: ${{ inputs.run_test == true }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET ${{ inputs.dotnet_version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet_version }}

    - name: Install coverlet collector (if needed)
      run: dotnet add ${{ inputs.project_path }} package coverlet.collector

    - name: Run Tests with Coverage
      run: dotnet test --configuration Release --collect:"XPlat Code Coverage"

    - name: Convert coverage to lcov (optional, for prettier visualization)
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:HtmlInline_AzurePipelines;Cobertura

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: coveragereport

    # Optional: Upload to GitHub summary (Actions UI)
    - name: Publish Coverage Summary
      run: |
        echo "## Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "[View Coverage Report](./coveragereport/index.html)" >> $GITHUB_STEP_SUMMARY


  # # Run tests
  # run_test:
  #   if: ${{ inputs.run_test == true }}
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   # Install .NET 9.0 SDK
  #   - name: Setup .NET ${{ inputs.dotnet_version }}
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: ${{ inputs.dotnet_version }} # Use a specific version or '9.0.x' for the latest 9.0 preview
    
  #   - name: Run Tests
  #     run: dotnet test --configuration Release


  run_test_skipped:
    if: ${{ inputs.run_test != true }}
    runs-on: ubuntu-latest
    outputs:
      test_status: success
    steps:
      - name: Skipping tests
        run: echo "Tests are disabled via input"
